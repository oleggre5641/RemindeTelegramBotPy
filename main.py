import telebot
import os
import time
import threading


from func import check_date_format, check_time_format, add_reminde_database, remember, check_internet_connection

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.environ.get('API_TOKEN')
print(API_TOKEN)
bot = telebot.TeleBot(token=API_TOKEN)

t1 = threading.Thread(target=remember, args=(bot,))
t1.start()


@bot.message_handler(content_types=['text'])
def rem_create(message):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    :param message:
    """
    message_text = message.text
    if message_text == "/create":
        msg = bot.send_message(message.from_user.id, text="–ü—Ä–∏–≤–µ—Ç! üëã\n–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
        bot.register_next_step_handler(msg, text_enter)
    elif message_text == "/watch":
        msg = bot.send_message(message.from_user.id, text="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    elif message_text == "/help":
        msg = bot.send_message(message.from_user.id, text="–ö–æ–º–∞–Ω–¥—ã")

def text_enter(message):
    """
    –§—É–Ω—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è + –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É
    :param message: –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    """
    reminde_text = message.text
    msg = bot.send_message(message.from_user.id, text="–î–∞–ª–µ–µ –Ω–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n15.06")
    bot.register_next_step_handler(msg, date_enter, reminde_text)

def date_enter(message, reminde_text):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞—Ç—É + –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—ë
    :param message: –î–∞—Ç–∞
    """
    check_date_result = check_date_format(message.text)
    if check_date_result == True:
        date_text = message.text
        msg = bot.send_message(message.from_user.id, text="–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –≤—Ä–µ–º—è –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n12.00")
        bot.register_next_step_handler(msg, time_enter,reminde_text, date_text)
    else:
       bot.send_message(message.from_user.id, text="–í—ã –≤–≤–µ–ª–∏ –¥–∞—Ç—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞!\n–ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—É \n'/create'")


def time_enter(message, reminde_text, date_text):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è + –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ
    :param message:
    :param reminde_text: –¢–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    """
    check_time_result = check_time_format(message.text)
    if check_time_result == True:
        time_text = message.text
        result_create_reminde = add_reminde_database(message.from_user.id ,reminde_text, date_text, time_text)
        if result_create_reminde == True:
            bot.send_message(message.from_user.id, text="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ‚úÖ")
        else:
            bot.send_message(message.from_user.id, text="–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ ‚ùå")
    else:
        bot.send_message(message.from_user.id, text="–í—ã –≤–≤–µ–ª–∏ –≤—Ä–µ–º—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞!\n–ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—É \n'/create'")


while True:
    try:
        bot.polling(none_stop=True, interval=0)
    except Exception as e:
        print('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API —Ç–µ–ª–µ–≥—Ä–∞–º–º')
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        time.sleep(1)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
        if check_internet_connection():
            print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ")
            continue  # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ü–∏–∫–ª –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è